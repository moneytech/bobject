@startuml

class BObjectKlass << (S,#FF7700) Singleton >> {
  BaseKlass *parent
  BObjectVtable *vtable
  const size_t size
  const size_t vtab_size
  const char *type_name
  bool initialized
  void (* const initializer)(void *)
  void (* const ctor)(void *, void *p)
  void (* const dtor)(void *)
  bo_copy_result (* const copy)(void *, void *)
}

class BObjectVtable << (S,#FF7700) Singleton >>

class MyObjectKlass << (S,#FF7700) Singleton >> {
  BObjectKlass *parent
  MyObjectVtable *vtable
  const size_t size
  const size_t vtab_size
  const char *type_name
  bool initialized
  void (* const initializer)(void *)
  void (* const ctor)(void *, void *p)
  void (* const dtor)(void *)
  bo_copy_result (* const copy)(void *, void *)
}

class MyObjectVtable << (S,#FF7700) Singleton >> {
  BObjectVtable BObjectVtable
}

class BObject {
  Klass *type
  bo_atomic_int ref_count;
}

class MyObject {
  BObject base
  ...
}

BObjectKlass --> BObjectVtable
MyObjectKlass --> MyObjectVtable
BObjectKlass <-- MyObjectKlass
MyObjectVtable *--> BObjectVtable
BObject --> MyObjectKlass
MyObject *--> BObject

note top of BObjectKlass
  Global static class table shared
  between every instance of BObject
  objects.
end note

note left of MyObjectKlass
  Global static class table shared
  between every instance of MyObject
  objects. (Class type derived from
  BObject base class type)
end note

note left of BObject
  Base BObject instance containing
  only pointer to the class definition
  table.
end note

note left of MyObject
  User defined custom object type
  (derived from BObject). Base object
  data comes first fallowed by user
  date needed by object.
end note
@enduml